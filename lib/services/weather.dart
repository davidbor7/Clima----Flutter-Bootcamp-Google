import 'package:clima/services/networking.dart';
import 'package:clima/screens/location_screen.dart';
import 'package:flutter/material.dart';
import 'package:clima/services/location.dart';

const apiKey = '3ff2e0325ddfa94d64e8ad5aca36cbbb';

class WeatherModel {


  String getWeatherIcon(int condition) {
    if (condition < 300) {
      return 'üå©';
    } else if (condition < 400) {
      return 'üåß';
    } else if (condition < 600) {
      return '‚òîÔ∏è';
    } else if (condition < 700) {
      return '‚òÉÔ∏è';
    } else if (condition < 800) {
      return 'üå´';
    } else if (condition == 800) {
      return '‚òÄÔ∏è';
    } else if (condition <= 804) {
      return '‚òÅÔ∏è';
    } else {
      return 'ü§∑‚Äç';
    }
  }


  String getMessage(int temp) {
    if (temp > 35) {
      return 'Es hora de pisar la playa ‚õ±Ô∏èüåûüëôüåä';
    } else if (temp > 23) {
      return 'La üå°Ô∏è perfecta para dar un paseo';
    } else if (temp < 10) {
      return 'Vas a necesitar üß£üß§';
    } else {
      return 'Coge una üß• har√° algo de fresco';
    }
  }
  
  Future<dynamic> getLocationWeather() async {

    Location location = Location();
    await location.getCurretnLocation();

    NetworkHelper networkHelper = NetworkHelper('http://api.openweathermap.org/data/2.5/weather?lat=${location.latitude}&lon=${location.longitude}&appid=$apiKey&units=metric');
    var weatherData = await networkHelper.getData();

    return weatherData;
    
  }

  Future<dynamic> getCityWeather(String cityName) async {

    NetworkHelper networkHelper = NetworkHelper('http://api.openweathermap.org/data/2.5/weather?q=$cityName&appid=$apiKey&units=metric');
    var weatherData = await networkHelper.getData();

    return weatherData;
    
  }

}
